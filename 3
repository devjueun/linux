SHELL vs KERNEL
커널 알맹이 핵심 코어
쉘 껍데기 주변

kenel shell 구글 이미지 검색

하드웨어 기계적인 부분 메모리 하드디스크 ssd cpu
기계를 동작시켜서 원하는 기능을 하도록-> 컴퓨터를 사용하는 이유
커널 물리적인기계 직접 제어 운영체제에서 가장 중심이 되는 부분 
쉘 사용자가 리눅스에서 ls -al 등 명령을 입력하면 해석해서 커널이 이해할수있게 해줌 처리를 수행할수있도록 명령 커널을 직접제어할수없으므로 사람이 이해할수없는 명령어를입력해서 커널이 이해할수있는부분으로바꿔준다
사용자가 입력한 명령을 해석하는 프로그램-> 여러가지 쉘이 존재할수있음(사용자맞춤, 선호에 따라)->커널과쉘을 분리한이유?




echo "hello"
>>hello
echo $0
>>-bash
내가 현재 쉘 중에서 쉘이라는 카테고리에 속하는 구체적인 제품중에하나인 bash라는 제품을 사용중

zsh 설치후
sudo yum install zsh
echo $0
>>zsh

bash와 zsh(지쉘)

zsh이 좀더 편의성 기능 추가함

#shell script -> 프로그래밍 언어
스크립트 대본 각본 어떠한 배우들이 어떤순서로 움직여야할지에 대한 흐름도
쉘을 통해 명령을 실행시킬수 있다
명령이 하나 외에 여러개 순차적으로 실행시켜서 업무가 진행될때
명령의 각본, 명령의 스크립트-> shell script

명령어의 세트(자주사용하는), 가끔사용하지만 복잡한 명령어
불러와서 실행하면 편리=> 자동화 가능

*와일드카드
mkdir script
cd script 
touch a.log b.log c.log
ls -l 
mkdir bak
cp *.log bak #백업
ls -l bak

echo $0 # 지금 사용하고 있는 쉘 
>>-bash 일종의 프로그래밍 

bash라는 프로그램은 어디에 있는가
ls /bin #리눅스 기본 프로그램

지금작성하고있는 백업이라고 하는 프로그램을 실행시켰을때
운영체제는  첫번째줄에있는 #!을 보고 /bin/bash 를 통해서 해석되어야 한다를 해석

현재디렉토리에 bak라는 디렉토리가 없다면
#!/bin/bash
if ! [ -d bak ] ; then
  mkdir bak
fi
cp *.log bak
fi if문 종료
